<?xml version="1.0" encoding="UTF-8" ?>
<project name="SmartFab" id="Project-18a7" database="SqlServer" >
	<schema name="dbo" catalogname="SmartFab" >
		<table name="AlertTypes" prior="AlertTable" generator_rows="100" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Description" prior="AlertType" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<index name="pk_AlertTable" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="AlertsTable" generator_rows="150" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="TaskID" prior="JobId" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="RunNo" type="int" jt="4" mandatory="y" />
			<column name="AlertType" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="SpecType" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="StartTime" prior="DateTime" type="datetime" length="23" decimal="3" jt="92" mandatory="y" />
			<column name="FinishTime" type="datetime" jt="92" />
			<index name="pk_AlertsTable" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_AlertsTable_StartTime" unique="NORMAL" >
				<column name="StartTime" />
			</index>
			<fk name="fk_AlertsTable_AlertTypes" to_schema="SmartFab.dbo" to_table="AlertTypes" >
				<fk_column name="AlertType" pk="id" />
			</fk>
			<fk name="fk_AlertsTable_SpecTypes" to_schema="SmartFab.dbo" to_table="SpecTypes" >
				<fk_column name="SpecType" pk="id" />
			</fk>
		</table>
		<table name="Assignment" generator_rows="100" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="TaskID" prior="JobID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="MachineID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="WelderID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_Assignment" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="Category" generator_rows="100" >
			<column name="category_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="arctime" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_dashboard_category" unique="PRIMARY_KEY" >
				<column name="category_id" />
			</index>
		</table>
		<table name="Employees" prior="UserList" generator_rows="100" >
			<column name="payroll_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="first_name" type="varchar" length="25" decimal="0" jt="12" mandatory="y" />
			<column name="last_name" type="varchar" length="25" decimal="0" jt="12" mandatory="y" />
			<column name="FullName" type="varchar" length="200" jt="12" definition="first_name + &#039; &#039; + last_name" spec="computed" mandatory="y" />
			<column name="employment_status" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_dashboard_user_list" unique="PRIMARY_KEY" >
				<column name="payroll_id" />
			</index>
		</table>
		<table name="JobContract" generator_rows="225" >
			<column name="id" type="int" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ContractID" prior="JobID" type="int" jt="4" mandatory="y" />
			<column name="ContractName" type="varchar" length="100" jt="12" regexp="Contract [0-9]{3}" regexp_nulls="0" />
			<column name="Details" type="text" jt="-1" regexp="Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,&#10;molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum&#10;numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium&#10;optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis&#10;obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam&#10;nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit,&#10;tenetur error, harum nesciunt ipsum debitis quas aliquid. Reprehenderit,&#10;quia. Quo neque error repudiandae fuga? Ipsa laudantium molestias eos &#10;sapiente officiis modi at sunt excepturi expedita sint? Sed quibusdam&#10;recusandae alias error harum maxime adipisci amet laborum. Perspiciatis &#10;minima nesciunt dolorem! Officiis iure rerum voluptates a cumque velit &#10;quibusdam sed amet tempora. Sit laborum ab, eius fugit doloribus tenetur &#10;fugiat, temporibus enim commodi iusto libero magni deleniti quod quam &#10;consequuntur! Commodi minima excepturi repudiandae velit hic maxime&#10;doloremque. Quaerat provident commodi consectetur veniam similique ad &#10;earum omnis ipsum saepe, voluptas, hic voluptates pariatur est explicabo &#10;fugiat, dolorum eligendi quam cupiditate excepturi mollitia maiores labore &#10;suscipit quas? Nulla, placeat. Voluptatem quaerat non architecto ab laudantium&#10;modi minima sunt esse temporibus sint culpa, recusandae aliquam numquam &#10;totam ratione voluptas quod exercitationem fuga. Possimus quis earum veniam &#10;quasi aliquam eligendi, placeat qui corporis!" regexp_nulls="0" />
			<index name="pk_JobContract" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="JobTimeTracker" generator_rows="150" >
			<column name="id" prior="job_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="category" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="start_date" type="date" length="10" decimal="0" jt="91" mandatory="y" />
			<column name="end_date" type="date" length="10" decimal="0" jt="91" />
			<column name="accum_hrs" type="real" length="24" decimal="0" jt="7" mandatory="y" />
			<column name="total_hrs" type="real" length="24" decimal="0" jt="7" mandatory="y" />
			<index name="pk_dashboard_job" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_dashboard_job_dashboard_category" to_schema="SmartFab.dbo" to_table="Category" >
				<fk_column name="category" pk="category_id" />
			</fk>
		</table>
		<table name="Locations" prior="Location" generator_rows="100" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Location" prior="location" type="varchar" length="25" decimal="0" jt="12" mandatory="y" />
			<index name="pk_dashboard_location" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="Machines" prior="Machine" generator_rows="150" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Description" prior="description" type="varchar" length="25" decimal="0" jt="12" mandatory="y" />
			<column name="locid" prior="location_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_dashboard_machine" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_dashboard_machine_dashboard_location" to_schema="SmartFab.dbo" to_table="Locations" >
				<fk_column name="locid" pk="id" />
			</fk>
		</table>
		<table name="RealTime_Data" generator_rows="100" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Time" type="datetime" length="23" decimal="3" jt="92" mandatory="y" />
			<column name="Temperature" type="float" length="53" decimal="0" jt="8" />
			<column name="Current" type="float" length="53" decimal="0" jt="8" />
			<column name="Voltage" type="float" length="53" decimal="0" jt="8" />
			<column name="Length" type="float" length="53" decimal="0" jt="8" >
				<defo><![CDATA[0.00]]></defo>
			</column>
			<column name="WireFeedRate" type="float" length="53" decimal="0" jt="8" />
			<column name="GasUsed" type="float" length="53" decimal="0" jt="8" />
			<column name="HeatInput" type="float" length="53" decimal="0" jt="8" />
			<column name="TravelSpeed" type="float" length="53" decimal="0" jt="8" />
			<column name="TimeDelta" type="float" length="53" decimal="0" jt="8" />
			<column name="Power" type="float" length="53" decimal="0" jt="8" />
			<index name="pk_RealTime_Data" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_RealTime_Data" unique="NORMAL" >
				<column name="Time" options="DESC" />
			</index>
		</table>
		<table name="RunTable" prior="WeldTable" generator_rows="150" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="RunNo" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assignment_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_WeldTable" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_WeldTable" to_schema="SmartFab.dbo" to_table="Assignment" delete_action="cascade" update_action="cascade" >
				<fk_column name="Assignment_id" pk="id" />
			</fk>
		</table>
		<table name="SpecTypes" prior="SpecType" generator_rows="100" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Description" prior="SpecType" type="varchar" length="40" decimal="0" jt="12" mandatory="y" />
			<index name="pk_SpecType" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="Specification" generator_rows="6" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Side" type="varchar" length="10" decimal="0" jt="12" regexp="[1-2]" regexp_nulls="0" />
			<column name="Position" type="varchar" length="20" decimal="0" jt="12" regexp="[1-4][A-H]" regexp_nulls="0" />
			<column name="Class" type="varchar" length="20" decimal="0" jt="12" regexp="ES-[1-9]" regexp_nulls="0" />
			<column name="Size" type="float" length="53" decimal="0" jt="8" regexp="0.9" regexp_nulls="0" />
			<column name="Gas_Flux_Type" type="varchar" length="20" decimal="0" jt="12" regexp="Argon/CO2/O2" regexp_nulls="0" />
			<column name="Current_Max" type="float" length="53" decimal="0" jt="8" regexp="double:from=100;to=300;format=####################.;" regexp_nulls="0" />
			<column name="Current_Min" prior="Current_min" type="float" length="53" decimal="0" jt="8" regexp_nulls="0" />
			<column name="Voltage_Min" type="float" length="53" decimal="0" jt="8" regexp_nulls="0" />
			<column name="Voltage_Max" type="float" length="53" decimal="0" jt="8" regexp="double:from=20;to=40;format=####################.;" regexp_nulls="0" />
			<column name="Polarity" type="varchar" length="10" jt="12" regexp="DC+" regexp_nulls="0" />
			<column name="TravelSpeed_Min" prior="Travel_Speed_Min" type="float" length="53" decimal="0" jt="8" regexp_nulls="0" />
			<column name="TravelSpeed_Max" prior="Travel_Speed_Max" type="float" length="53" decimal="0" jt="8" regexp="double:from=200;to=600;format=####################.;" regexp_nulls="0" />
			<column name="InterpassTemp_Min" prior="Interpass_Temp_Min" type="float" length="53" decimal="0" jt="8" regexp="0" regexp_nulls="0" />
			<column name="InterpassTemp_Max" prior="Interpass_Temp_Max" type="float" length="53" decimal="0" jt="8" regexp="double:from=250;to=400;format=####################.;" regexp_nulls="0" />
			<column name="HeatInput_Min" prior="Heat_Input_Min" type="float" length="53" decimal="0" jt="8" regexp="double:from=0.5;to=3.5;format=####################.##;" regexp_nulls="0" />
			<column name="HeatInput_Max" prior="Heat_Input_Max" type="float" length="53" decimal="0" jt="8" regexp_nulls="0" />
			<index name="pk_Specification" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="TaskAssignment" generator_rows="100" >
			<column name="id" prior="Taskid" type="int" length="10" decimal="0" jt="4" mandatory="y" regexp="skip" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="WPSNo" prior="WPSid" type="int" jt="4" mandatory="y" />
			<column name="Welderid" type="int" jt="4" mandatory="y" />
			<column name="Machineid" type="int" jt="4" mandatory="y" />
			<index name="pk_TaskAssignment" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_TaskAssignment_Machines" to_schema="SmartFab.dbo" to_table="Machines" >
				<fk_column name="Machineid" pk="id" />
			</fk>
			<fk name="fk_TaskAssignment_Employees" to_schema="SmartFab.dbo" to_table="Employees" >
				<fk_column name="Welderid" pk="payroll_id" />
			</fk>
			<fk name="fk_TaskAssignment_WPS" to_schema="SmartFab.dbo" to_table="WPS" delete_action="cascade" update_action="cascade" >
				<fk_column name="WPSNo" pk="id" />
			</fk>
		</table>
		<table name="TaskAssociation" generator_rows="337" >
			<column name="Jobid" type="int" jt="4" mandatory="y" />
			<column name="Taskid" type="int" jt="4" mandatory="y" />
			<index name="unq_TaskAssociation_Taskid" unique="UNIQUE_KEY" >
				<column name="Taskid" />
			</index>
			<fk name="fk_TaskAssociation_TaskAssignment" to_schema="SmartFab.dbo" to_table="TaskAssignment" delete_action="cascade" update_action="cascade" >
				<fk_column name="Taskid" pk="id" />
			</fk>
			<fk name="fk_TaskAssociation_JobContract" to_schema="SmartFab.dbo" to_table="JobContract" delete_action="cascade" update_action="cascade" >
				<fk_column name="Jobid" pk="id" />
			</fk>
		</table>
		<table name="TimesheetTask" generator_rows="225" >
			<column name="task_id" type="nvarchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="payroll_id" prior="payrollid" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="job_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="machine_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="datetime" type="datetime" length="23" decimal="3" jt="92" mandatory="y" />
			<index name="pk_dashboard_task" unique="PRIMARY_KEY" >
				<column name="task_id" />
			</index>
			<fk name="fk_dashboard_task_dashboard_machine" to_schema="SmartFab.dbo" to_table="Machines" >
				<fk_column name="machine_id" pk="id" />
			</fk>
			<fk name="fk_dashboard_task_dashboard_task_type" to_schema="SmartFab.dbo" to_table="TimesheetTaskType" >
				<fk_column name="type_id" pk="id" />
			</fk>
			<fk name="fk_TimesheetTask_Employees" to_schema="SmartFab.dbo" to_table="Employees" >
				<fk_column name="payroll_id" pk="payroll_id" />
			</fk>
		</table>
		<table name="TimesheetTaskType" generator_rows="100" >
			<column name="id" prior="task_type_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Description" prior="desc" type="varchar" length="25" decimal="0" jt="12" mandatory="y" />
			<index name="pk_dashboard_task_type" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="Timesheet_entry" generator_rows="150" >
			<column name="tid" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="org_timesheet_id" type="nvarchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="payroll_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="date" type="date" length="10" decimal="0" jt="91" mandatory="y" />
			<column name="shift_end" type="time" length="7" decimal="7" jt="92" mandatory="y" />
			<column name="shift_start" type="time" length="7" decimal="7" jt="92" mandatory="y" />
			<column name="shift_length" type="real" length="24" decimal="0" jt="7" mandatory="y" />
			<index name="pk_dashboard_timesheet_entry" unique="PRIMARY_KEY" >
				<column name="tid" />
			</index>
			<fk name="fk_dashboard_timesheet_entry_dashboard_user_list" to_schema="SmartFab.dbo" to_table="Employees" >
				<fk_column name="payroll_id" pk="payroll_id" />
			</fk>
		</table>
		<table name="WASP_Settings" prior="dashboard_db_settings" generator_rows="100" >
			<column name="setting_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="desc" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="value" type="varchar" length="128" decimal="0" jt="12" mandatory="y" />
			<index name="pk_dashboard_db_settings" unique="PRIMARY_KEY" >
				<column name="setting_id" />
			</index>
		</table>
		<table name="WPS" generator_rows="100" >
			<column name="id" type="int" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="WPS_No" type="int" length="20" jt="4" mandatory="y" />
			<column name="Welding_Code" type="varchar" length="20" decimal="0" jt="12" />
			<column name="Joint_type" type="varchar" length="20" decimal="0" jt="12" />
			<index name="pk_WPS" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_WPS_WPS_No" unique="UNIQUE_INDEX" >
				<column name="WPS_No" />
			</index>
		</table>
		<table name="WPS_Run" generator_rows="150" >
			<column name="id" type="int" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Run_No" type="int" length="10" decimal="0" jt="4" />
			<column name="WPS_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Specification_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_WPS_Run" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_WPS_Run_Specification_id" unique="UNIQUE_KEY" >
				<column name="Specification_id" />
			</index>
			<fk name="fk_WPS_Run_Specification" to_schema="SmartFab.dbo" to_table="Specification" delete_action="cascade" update_action="cascade" >
				<fk_column name="Specification_id" pk="id" />
			</fk>
			<fk name="fk_WPS_Run_WPS" to_schema="SmartFab.dbo" to_table="WPS" delete_action="cascade" update_action="cascade" >
				<fk_column name="WPS_id" pk="id" />
			</fk>
		</table>
		<table name="WeldingTable" generator_rows="225" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Machine_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="RT_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="WT_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Welder_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_WeldingTable" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="unq_WeldingTable_RT_id" unique="UNIQUE_KEY" >
				<column name="RT_id" />
			</index>
			<fk name="fk_WeldingTable_RealTime_Data" to_schema="SmartFab.dbo" to_table="RealTime_Data" delete_action="cascade" update_action="cascade" >
				<fk_column name="RT_id" pk="id" />
			</fk>
			<fk name="fk_WeldingTable_WeldTable" to_schema="SmartFab.dbo" to_table="RunTable" delete_action="cascade" update_action="cascade" >
				<fk_column name="WT_id" pk="id" />
			</fk>
		</table>
		<table name="auth_group" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="name" type="nvarchar" length="150" decimal="0" jt="12" mandatory="y" />
			<index name="PK__auth_gro__3213E83F29E695FD" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_group_name_a6ea08ec_uniq" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
		</table>
		<table name="auth_group_permissions" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="group_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="permission_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="PK__auth_gro__3213E83FDC338679" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_group_permissions_group_id_permission_id_0cd325b0_uniq" unique="UNIQUE_INDEX" >
				<column name="group_id" />
				<column name="permission_id" />
			</index>
			<index name="auth_group_permissions_group_id_b120cbf9" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<index name="auth_group_permissions_permission_id_84c5c92e" unique="NORMAL" >
				<column name="permission_id" />
			</index>
			<fk name="auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" to_schema="SmartFab.dbo" to_table="auth_group" >
				<fk_column name="group_id" pk="id" />
			</fk>
			<fk name="auth_group_permissions_permission_id_84c5c92e_fk_auth_permission_id" to_schema="SmartFab.dbo" to_table="auth_permission" >
				<fk_column name="permission_id" pk="id" />
			</fk>
		</table>
		<table name="auth_permission" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="name" type="nvarchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="content_type_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="codename" type="nvarchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="PK__auth_per__3213E83F31E606E0" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_permission_content_type_id_codename_01ab375a_uniq" unique="UNIQUE_INDEX" >
				<column name="content_type_id" />
				<column name="codename" />
			</index>
			<index name="auth_permission_content_type_id_2f476e4b" unique="NORMAL" >
				<column name="content_type_id" />
			</index>
			<fk name="auth_permission_content_type_id_2f476e4b_fk_django_content_type_id" to_schema="SmartFab.dbo" to_table="django_content_type" >
				<fk_column name="content_type_id" pk="id" />
			</fk>
		</table>
		<table name="auth_user" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="password" type="nvarchar" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="last_login" type="datetime2" length="7" decimal="7" jt="92" />
			<column name="is_superuser" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="username" type="nvarchar" length="150" decimal="0" jt="12" mandatory="y" />
			<column name="first_name" type="nvarchar" length="150" decimal="0" jt="12" mandatory="y" />
			<column name="last_name" type="nvarchar" length="150" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="nvarchar" length="254" decimal="0" jt="12" mandatory="y" />
			<column name="is_staff" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="is_active" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="date_joined" type="datetime2" length="7" decimal="7" jt="92" mandatory="y" />
			<index name="PK__auth_use__3213E83F3B85FC5C" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_user_username_6821ab7c_uniq" unique="UNIQUE_KEY" >
				<column name="username" />
			</index>
		</table>
		<table name="auth_user_groups" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="user_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="group_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="PK__auth_use__3213E83FF12447A7" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_user_groups_user_id_group_id_94350c0c_uniq" unique="UNIQUE_INDEX" >
				<column name="user_id" />
				<column name="group_id" />
			</index>
			<index name="auth_user_groups_group_id_97559544" unique="NORMAL" >
				<column name="group_id" />
			</index>
			<index name="auth_user_groups_user_id_6a12ed8b" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="auth_user_groups_group_id_97559544_fk_auth_group_id" to_schema="SmartFab.dbo" to_table="auth_group" >
				<fk_column name="group_id" pk="id" />
			</fk>
			<fk name="auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" to_schema="SmartFab.dbo" to_table="auth_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
		</table>
		<table name="auth_user_user_permissions" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="user_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="permission_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="PK__auth_use__3213E83FA94A8336" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" unique="UNIQUE_INDEX" >
				<column name="user_id" />
				<column name="permission_id" />
			</index>
			<index name="auth_user_user_permissions_permission_id_1fbb5f2c" unique="NORMAL" >
				<column name="permission_id" />
			</index>
			<index name="auth_user_user_permissions_user_id_a95ead1b" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="auth_user_user_permissions_permission_id_1fbb5f2c_fk_auth_permission_id" to_schema="SmartFab.dbo" to_table="auth_permission" >
				<fk_column name="permission_id" pk="id" />
			</fk>
			<fk name="auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" to_schema="SmartFab.dbo" to_table="auth_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
		</table>
		<table name="django_admin_log" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="action_time" type="datetime2" length="7" decimal="7" jt="92" mandatory="y" />
			<column name="object_id" type="nvarchar(max)" length="0" decimal="0" jt="12" />
			<column name="object_repr" type="nvarchar" length="200" decimal="0" jt="12" mandatory="y" />
			<column name="action_flag" type="smallint" length="5" decimal="0" jt="5" mandatory="y" />
			<column name="change_message" type="nvarchar(max)" length="0" decimal="0" jt="12" mandatory="y" />
			<column name="content_type_id" type="int" length="10" decimal="0" jt="4" />
			<column name="user_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="PK__django_a__3213E83F3F66F2B8" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="django_admin_log_content_type_id_c4bce8eb" unique="NORMAL" >
				<column name="content_type_id" />
			</index>
			<index name="django_admin_log_user_id_c564eba6" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<constraint name="django_admin_log_action_flag_a8637d59_check" >
				<string><![CDATA[[action_flag]>=(0)]]></string>
			</constraint>
			<fk name="django_admin_log_user_id_c564eba6_fk_auth_user_id" to_schema="SmartFab.dbo" to_table="auth_user" >
				<fk_column name="user_id" pk="id" />
			</fk>
			<fk name="django_admin_log_content_type_id_c4bce8eb_fk_django_content_type_id" to_schema="SmartFab.dbo" to_table="django_content_type" >
				<fk_column name="content_type_id" pk="id" />
			</fk>
		</table>
		<table name="django_content_type" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="app_label" type="nvarchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="model" type="nvarchar" length="100" decimal="0" jt="12" mandatory="y" />
			<index name="PK__django_c__3213E83FCB4266CE" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="django_content_type_app_label_model_76bd3d3b_uniq" unique="UNIQUE_INDEX" >
				<column name="app_label" />
				<column name="model" />
			</index>
		</table>
		<table name="django_migrations" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="app" type="nvarchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="nvarchar" length="255" decimal="0" jt="12" mandatory="y" />
			<column name="applied" type="datetime2" length="7" decimal="7" jt="92" mandatory="y" />
			<index name="PK__django_m__3213E83FD766805F" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="django_session" >
			<column name="session_key" type="nvarchar" length="40" decimal="0" jt="12" mandatory="y" />
			<column name="session_data" type="nvarchar(max)" length="0" decimal="0" jt="12" mandatory="y" />
			<column name="expire_date" type="datetime2" length="7" decimal="7" jt="92" mandatory="y" />
			<index name="PK__django_s__B3BA0F1FB4D9922F" unique="PRIMARY_KEY" >
				<column name="session_key" />
			</index>
			<index name="django_session_expire_date_a5c62663" unique="NORMAL" >
				<column name="expire_date" />
			</index>
		</table>
		<table name="sysdiagrams" generator_rows="100" >
			<column name="diagram_id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="name" type="sysname" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="principal_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="version" type="int" length="10" decimal="0" jt="4" />
			<column name="definition" type="varbinary(max)" length="0" decimal="0" jt="-3" />
			<index name="PK__sysdiagr__C2B05B6112D23299" unique="PRIMARY_KEY" >
				<column name="diagram_id" />
			</index>
			<index name="UK_principal_name" unique="UNIQUE_KEY" >
				<column name="principal_id" />
				<column name="name" />
			</index>
		</table>
		<view name="ActiveView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT DISTINCT a.TaskID, a.MachineID, a.WelderID, r.RunNo
FROM SmartFab.dbo.Assignment a 
	INNER JOIN SmartFab.dbo.RunTable r ON ( a.id = r.Assignment_id  )  
	INNER JOIN SmartFab.dbo.WeldingTable w ON ( r.id = w.WT_id  )  
	INNER JOIN SmartFab.dbo.RealTime_Data rd ON ( w.RT_id = rd.id  )
WHERE DATEDIFF(SECOND, rd.time, SYSDATETIME() ) <= 30.0]]></view_script>
			<column name="TaskID" type="int" />
			<column name="MachineID" type="int" />
			<column name="WelderID" type="int" />
			<column name="RunNo" type="int" />
		</view>
		<view name="AlertView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT a.id, a.TaskID, a.RunNo, a.StartTime, a.FinishTime, a1.Description AlertType, s.Description SpecType
FROM SmartFab.dbo.AlertsTable a 
	INNER JOIN SmartFab.dbo.AlertTypes a1 ON ( a.AlertType = a1.id  )  
	INNER JOIN SmartFab.dbo.SpecTypes s ON ( a.SpecType = s.id  )  ]]></view_script>
			<column name="id" type="int" />
			<column name="TaskID" type="int" />
			<column name="RunNo" type="int" />
			<column name="StartTime" type="datetime" />
			<column name="FinishTime" type="datetime" />
			<column name="AlertType" type="varchar" />
			<column name="SpecType" type="varchar" />
		</view>
		<view name="ContractTaskView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT j.id as ContractID, j.ContractName, j.Details,t1.id as TaskID, w.WPS_No, e.FullName, m.Description
FROM SmartFab.dbo.JobContract j 
	INNER JOIN SmartFab.dbo.TaskAssociation t ON ( j.id = t.Jobid  )  
	INNER JOIN SmartFab.dbo.TaskAssignment t1 ON ( t.Taskid = t1.id  )  
	INNER JOIN SmartFab.dbo.WPS w ON ( t1.WPSNo = w.id )  
	INNER JOIN SmartFab.dbo.Employees e ON ( t1.Welderid = e.payroll_id  )  
	INNER JOIN SmartFab.dbo.Machines m ON ( t1.Machineid = m.id  )  ]]></view_script>
			<column name="ContractID" type="int" />
			<column name="ContractName" type="varchar" />
			<column name="Details" type="text" />
			<column name="TaskID" type="int" />
			<column name="WPS_No" type="int" />
			<column name="FullName" type="varchar" />
			<column name="Description" type="varchar" />
		</view>
		<view name="MachineView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT m.id, m.Description, l.Location
FROM SmartFab.dbo.Machines m 
	INNER JOIN SmartFab.dbo.Locations l ON ( m.locid = l.id  )  ]]></view_script>
			<column name="id" type="int" />
			<column name="Description" type="varchar" />
			<column name="Location" type="varchar" />
		</view>
		<view name="RealTimeView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT r.RunNo, a.TaskID, a.MachineID, a.WelderID, rd.Time, rd.Temperature, rd.[Current], rd.Voltage, rd.Length, rd.WireFeedRate, rd.GasUsed, rd.HeatInput, rd.TravelSpeed, rd.TimeDelta, rd.Power
FROM SmartFab.dbo.RunTable r 
	INNER JOIN SmartFab.dbo.Assignment a ON ( r.Assignment_id = a.id  )  
	INNER JOIN SmartFab.dbo.WeldingTable w ON ( r.id = w.WT_id  )  
	INNER JOIN SmartFab.dbo.RealTime_Data rd ON ( w.RT_id = rd.id  )  ]]></view_script>
			<column name="TaskID" type="int" />
			<column name="RunNo" type="int" />
			<column name="MachineID" type="int" />
			<column name="WelderID" type="int" />
			<column name="Time" type="datetime" />
			<column name="Temperature" type="float" />
			<column name="Current" type="float" />
			<column name="Voltage" type="float" />
			<column name="Length" type="float" />
			<column name="WireFeedRate" type="float" />
			<column name="GasUsed" type="float" />
			<column name="HeatInput" type="float" />
			<column name="TravelSpeed" type="float" />
			<column name="TimeDelta" type="float" />
			<column name="Power" type="float" />
		</view>
		<view name="SpecificationView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT t.id, t.Welderid, t.Machineid, w.WPS_No, w.Welding_Code, w.Joint_type, wr.Run_No, s.Side, s.Position, s.Class, s.Size, s.Gas_Flux_Type, s.Current_Max, s.Current_Min, s.Voltage_Min, s.Voltage_Max, s.Polarity, s.TravelSpeed_Min, s.TravelSpeed_Max, s.InterpassTemp_Min, s.InterpassTemp_Max, s.HeatInput_Min, s.HeatInput_Max
FROM SmartFab.dbo.TaskAssignment t 
	INNER JOIN SmartFab.dbo.WPS w ON ( t.WPSNo = w.id  )  
	INNER JOIN SmartFab.dbo.WPS_Run wr ON ( w.id = wr.WPS_id  )  
	INNER JOIN SmartFab.dbo.Specification s ON ( wr.Specification_id = s.id  )  ]]></view_script>
			<column name="id" type="int" />
			<column name="Welderid" type="int" />
			<column name="Machineid" type="int" />
			<column name="WPS_No" type="int" />
			<column name="Welding_Code" type="varchar" />
			<column name="Joint_type" type="varchar" />
			<column name="Run_No" type="int" />
			<column name="Side" type="varchar" />
			<column name="Position" type="varchar" />
			<column name="Class" type="varchar" />
			<column name="Size" type="float" />
			<column name="Gas_Flux_Type" type="varchar" />
			<column name="Current_Max" type="float" />
			<column name="Current_Min" type="float" />
			<column name="Voltage_Min" type="float" />
			<column name="Voltage_Max" type="float" />
			<column name="Polarity" type="varchar" />
			<column name="TravelSpeed_Min" type="float" />
			<column name="TravelSpeed_Max" type="float" />
			<column name="InterpassTemp_Min" type="float" />
			<column name="InterpassTemp_Max" type="float" />
			<column name="HeatInput_Min" type="float" />
			<column name="HeatInput_Max" type="float" />
		</view>
		<view name="TaskView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT t.id as TaskID, w.WPS_No, e.FullName, m.Description MachineName
FROM SmartFab.dbo.TaskAssignment t 
	INNER JOIN SmartFab.dbo.WPS w ON ( t.WPSNo = w.id  )  
	INNER JOIN SmartFab.dbo.Employees e ON ( t.Welderid = e.payroll_id  )  
	INNER JOIN SmartFab.dbo.Machines m ON ( t.Machineid = m.id  )  ]]></view_script>
			<column name="TaskID" type="int" />
			<column name="WPS_No" type="int" />
			<column name="FullName" type="varchar" />
			<column name="MachineName" type="varchar" />
		</view>
		<view name="WPSView" >
			<view_script><![CDATA[CREATE VIEW ${name} AS SELECT w.id, w.WPS_No, w.Welding_Code, w.Joint_type, wr.Run_No, s.Side, s.Position, s.Class, s.Size, s.Gas_Flux_Type, s.Current_Max, s.Current_Min, s.Voltage_Min, s.Voltage_Max, s.Polarity, s.TravelSpeed_Min, s.TravelSpeed_Max, s.InterpassTemp_Min, s.InterpassTemp_Max, s.HeatInput_Min, s.HeatInput_Max
FROM SmartFab.dbo.WPS w 
	INNER JOIN SmartFab.dbo.WPS_Run wr ON ( w.id = wr.WPS_id  )  
	INNER JOIN SmartFab.dbo.Specification s ON ( wr.Specification_id = s.id  )  ]]></view_script>
			<column name="id" type="int" />
			<column name="WPS_No" type="int" />
			<column name="Welding_Code" type="varchar" />
			<column name="Joint_type" type="varchar" />
			<column name="Run_No" type="int" />
			<column name="Side" type="varchar" />
			<column name="Position" type="varchar" />
			<column name="Class" type="varchar" />
			<column name="Size" type="float" />
			<column name="Gas_Flux_Type" type="varchar" />
			<column name="Current_Max" type="float" />
			<column name="Current_Min" type="float" />
			<column name="Voltage_Min" type="float" />
			<column name="Voltage_Max" type="float" />
			<column name="Polarity" type="varchar" />
			<column name="TravelSpeed_Min" type="float" />
			<column name="TravelSpeed_Max" type="float" />
			<column name="InterpassTemp_Min" type="float" />
			<column name="InterpassTemp_Max" type="float" />
			<column name="HeatInput_Min" type="float" />
			<column name="HeatInput_Max" type="float" />
		</view>
		<procedure name="sp_alterdiagram" id="Procedure-23e3" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_alterdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null,
		@version 	int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId 			int
		declare @retval 		int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @ShouldChangeUID	int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid ARG', 16, 1)
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();	 
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		revert;
	
		select @ShouldChangeUID = 0
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		
		if(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
	
		if(@IsDbo <> 0)
		begin
			if(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id
			begin
				select @ShouldChangeUID = 1 ;
			end
		end
		-- update dds data			
		update dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;
		-- change owner
		if(@ShouldChangeUID = 1)
			update dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;
		-- update dds version
		if(@version is not null)
			update dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@version" jt="4" type="int" />
			<input_param name="@definition" jt="-3" type="varbinary" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_creatediagram" id="Procedure-1cef" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_creatediagram
	(
		@diagramname 	sysname,
		@owner_id		int	= null, 	
		@version 		int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId int
		declare @retval int
		declare @IsDbo	int
		declare @userName sysname
		if(@version is null or @diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID(); 
		select @IsDbo = IS_MEMBER(N'db_owner');
		revert; 
		
		if @owner_id is null
		begin
			select @owner_id = @theId;
		end
		else
		begin
			if @theId <> @owner_id
			begin
				if @IsDbo = 0
				begin
					RAISERROR (N'E_INVALIDARG', 16, 1);
					return -1
				end
				select @theId = @owner_id
			end
		end
		-- next 2 line only for test, will be removed after define name unique
		if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end
	
		insert into dbo.sysdiagrams(name, principal_id , version, definition)
				VALUES(@diagramname, @theId, @version, @definition) ;
		
		select @retval = @@IDENTITY 
		return @retval
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@version" jt="4" type="int" />
			<input_param name="@definition" jt="-3" type="varbinary" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_dropdiagram" id="Procedure-9e9" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_dropdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT; 
		
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		delete from dbo.sysdiagrams where diagram_id = @DiagId;
	
		return 0;
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_helpdiagramdefinition" id="Procedure-1025" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_helpdiagramdefinition
	(
		@diagramname 	sysname,
		@owner_id	int	= null 		
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 		int
		declare @IsDbo 		int
		declare @DiagId		int
		declare @UIDFound	int
	
		if(@diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner');
		if(@owner_id is null)
			select @owner_id = @theId;
		revert; 
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
		select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; 
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_helpdiagrams" id="Procedure-1952" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_helpdiagrams
	(
		@diagramname sysname = NULL,
		@owner_id int = NULL
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		DECLARE @user sysname
		DECLARE @dboLogin bit
		EXECUTE AS CALLER;
			SET @user = USER_NAME();
			SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));
		REVERT;
		SELECT
			[Database] = DB_NAME(),
			[Name] = name,
			[ID] = diagram_id,
			[Owner] = USER_NAME(principal_id),
			[OwnerID] = principal_id
		FROM
			sysdiagrams
		WHERE
			(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND
			(@diagramname IS NULL OR name = @diagramname) AND
			(@owner_id IS NULL OR principal_id = @owner_id)
		ORDER BY
			4, 5, 1
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_renamediagram" id="Procedure-cf8" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_renamediagram
	(
		@diagramname 		sysname,
		@owner_id		int	= null,
		@new_diagramname	sysname
	
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @DiagIdTarg		int
		declare @u_name			sysname
		if((@diagramname is null) or (@new_diagramname is null))
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT;
	
		select @u_name = USER_NAME(@owner_id)
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		-- if((@u_name is not null) and (@new_diagramname = @diagramname))	-- nothing will change
		--	return 0;
	
		if(@u_name is null)
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname
		else
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname
	
		if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end		
	
		if(@u_name is null)
			update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId
		else
			update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="-9" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@new_diagramname" jt="-9" type="sysname" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_upgraddiagrams" id="Procedure-88d" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE PROCEDURE dbo.sp_upgraddiagrams
	AS
	BEGIN
		IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL
			return 0;
	
		CREATE TABLE dbo.sysdiagrams
		(
			name sysname NOT NULL,
			principal_id int NOT NULL,	-- we may change it to varbinary(85)
			diagram_id int PRIMARY KEY IDENTITY,
			version int,
	
			definition varbinary(max)
			CONSTRAINT UK_principal_name UNIQUE
			(
				principal_id,
				name
			)
		);

		/* Add this if we need to have some form of extended properties for diagrams */
		/*
		IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL
		BEGIN
			CREATE TABLE dbo.sysdiagram_properties
			(
				diagram_id int,
				name sysname,
				value varbinary(max) NOT NULL
			)
		END
		*/
		IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL
		begin
			insert into dbo.sysdiagrams
			(
				[name],
				[principal_id],
				[version],
				[definition]
			)
			select	 
				convert(sysname, dgnm.[uvalue]),
				DATABASE_PRINCIPAL_ID(N'dbo'),			-- will change to the sid of sa
				0,							-- zero for old format, dgdef.[version],
				dgdef.[lvalue]
			from dbo.[dtproperties] dgnm
				inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]	
				inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]
				
			where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' 
			return 2;
		end
		return 1;
	END
	]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<function name="fn_diagramobjects" id="Function-16f5" isSystem="false" params_known="y" >
			<string><![CDATA[
	CREATE FUNCTION dbo.fn_diagramobjects() 
	RETURNS int
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		declare @id_upgraddiagrams		int
		declare @id_sysdiagrams			int
		declare @id_helpdiagrams		int
		declare @id_helpdiagramdefinition	int
		declare @id_creatediagram	int
		declare @id_renamediagram	int
		declare @id_alterdiagram 	int 
		declare @id_dropdiagram		int
		declare @InstalledObjects	int
		select @InstalledObjects = 0
		select 	@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),
			@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),
			@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),
			@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),
			@id_creatediagram = object_id(N'dbo.sp_creatediagram'),
			@id_renamediagram = object_id(N'dbo.sp_renamediagram'),
			@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), 
			@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')
		if @id_upgraddiagrams is not null
			select @InstalledObjects = @InstalledObjects + 1
		if @id_sysdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 2
		if @id_helpdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 4
		if @id_helpdiagramdefinition is not null
			select @InstalledObjects = @InstalledObjects + 8
		if @id_creatediagram is not null
			select @InstalledObjects = @InstalledObjects + 16
		if @id_renamediagram is not null
			select @InstalledObjects = @InstalledObjects + 32
		if @id_alterdiagram  is not null
			select @InstalledObjects = @InstalledObjects + 64
		if @id_dropdiagram is not null
			select @InstalledObjects = @InstalledObjects + 128
		
		return @InstalledObjects 
	END
	]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</function>
	</schema>
	<connector name="SqlServer" database="SqlServer" driver_class="com.microsoft.sqlserver.jdbc.SQLServerDriver" driver_jar="mssql-jdbc-9.2.0.jre11.jar" driver_desc="Windows Authentication, Current User" host="localhost" port="1433" instance="SmartFab" />
	<layout name="Parsed Script Layout" id="Layout-239" confirmed="y" show_relation="name" >
		<entity schema="SmartFab.dbo" name="ActiveView" color="3986C1" x="1728" y="1008" />
		<entity schema="SmartFab.dbo" name="AlertTypes" color="3986C1" x="1696" y="1360" />
		<entity schema="SmartFab.dbo" name="AlertView" color="3986C1" x="1712" y="720" />
		<entity schema="SmartFab.dbo" name="AlertsTable" color="3986C1" x="1888" y="1248" />
		<entity schema="SmartFab.dbo" name="Assignment" color="3986C1" x="832" y="1280" />
		<entity schema="SmartFab.dbo" name="Category" color="3986C1" x="256" y="1008" />
		<entity schema="SmartFab.dbo" name="ContractTaskView" color="3986C1" x="1872" y="720" />
		<entity schema="SmartFab.dbo" name="Employees" color="3986C1" x="368" y="800" />
		<entity schema="SmartFab.dbo" name="JobContract" color="C1D8EE" x="800" y="992" />
		<entity schema="SmartFab.dbo" name="JobTimeTracker" color="3986C1" x="480" y="976" />
		<entity schema="SmartFab.dbo" name="Locations" color="3986C1" x="384" y="1376" />
		<entity schema="SmartFab.dbo" name="MachineView" color="3986C1" x="1712" y="896" />
		<entity schema="SmartFab.dbo" name="Machines" color="3986C1" x="496" y="1232" />
		<entity schema="SmartFab.dbo" name="RealTimeView" color="3986C1" x="2416" y="720" />
		<entity schema="SmartFab.dbo" name="RealTime_Data" color="3986C1" x="1504" y="1216" />
		<entity schema="SmartFab.dbo" name="RunTable" color="3986C1" x="1024" y="1280" />
		<entity schema="SmartFab.dbo" name="SpecTypes" color="3986C1" x="1696" y="1200" />
		<entity schema="SmartFab.dbo" name="Specification" color="3986C1" x="1392" y="800" />
		<entity schema="SmartFab.dbo" name="SpecificationView" color="3986C1" x="2032" y="720" />
		<entity schema="SmartFab.dbo" name="TaskAssignment" color="C1D8EE" x="976" y="992" />
		<entity schema="SmartFab.dbo" name="TaskAssociation" color="C1D8EE" x="896" y="864" />
		<entity schema="SmartFab.dbo" name="TaskView" color="3986C1" x="1872" y="896" />
		<entity schema="SmartFab.dbo" name="TimesheetTask" color="3986C1" x="112" y="1088" />
		<entity schema="SmartFab.dbo" name="TimesheetTaskType" color="3986C1" x="96" y="1328" />
		<entity schema="SmartFab.dbo" name="Timesheet_entry" color="3986C1" x="48" y="720" />
		<entity schema="SmartFab.dbo" name="WASP_Settings" color="3986C1" x="688" y="624" />
		<entity schema="SmartFab.dbo" name="WPS" color="3986C1" x="1184" y="1008" />
		<entity schema="SmartFab.dbo" name="WPSView" color="3986C1" x="2224" y="720" />
		<entity schema="SmartFab.dbo" name="WPS_Run" color="3986C1" x="1168" y="800" />
		<entity schema="SmartFab.dbo" name="WeldingTable" color="3986C1" x="1264" y="1264" />
		<entity schema="SmartFab.dbo" name="auth_group" color="3986C1" x="288" y="224" />
		<entity schema="SmartFab.dbo" name="auth_group_permissions" color="3986C1" x="400" y="80" />
		<entity schema="SmartFab.dbo" name="auth_permission" color="3986C1" x="496" y="224" />
		<entity schema="SmartFab.dbo" name="auth_user" color="3986C1" x="80" y="336" />
		<entity schema="SmartFab.dbo" name="auth_user_groups" color="3986C1" x="128" y="80" />
		<entity schema="SmartFab.dbo" name="auth_user_user_permissions" color="3986C1" x="320" y="368" />
		<entity schema="SmartFab.dbo" name="django_admin_log" color="3986C1" x="784" y="304" />
		<entity schema="SmartFab.dbo" name="django_content_type" color="3986C1" x="800" y="96" />
		<entity schema="SmartFab.dbo" name="django_migrations" color="3986C1" x="992" y="112" />
		<entity schema="SmartFab.dbo" name="django_session" color="3986C1" x="1008" y="304" />
		<entity schema="SmartFab.dbo" name="sysdiagrams" color="3986C1" x="832" y="624" />
		<group name="Procedures" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="WPS_Run" />
			<entity schema="SmartFab.dbo" name="Specification" />
			<entity schema="SmartFab.dbo" name="WPS" />
		</group>
		<group name="Alerts" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="SpecTypes" />
			<entity schema="SmartFab.dbo" name="AlertTypes" />
			<entity schema="SmartFab.dbo" name="AlertsTable" />
		</group>
		<group name="Productivity" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="Timesheet_entry" />
			<entity schema="SmartFab.dbo" name="Locations" />
			<entity schema="SmartFab.dbo" name="TimesheetTaskType" />
			<entity schema="SmartFab.dbo" name="Employees" />
			<entity schema="SmartFab.dbo" name="Machines" />
			<entity schema="SmartFab.dbo" name="TimesheetTask" />
			<entity schema="SmartFab.dbo" name="JobTimeTracker" />
			<entity schema="SmartFab.dbo" name="Category" />
		</group>
		<group name="RealTime" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="Assignment" />
			<entity schema="SmartFab.dbo" name="WeldingTable" />
			<entity schema="SmartFab.dbo" name="RunTable" />
			<entity schema="SmartFab.dbo" name="RealTime_Data" />
		</group>
		<group name="Job Contract Assignment" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="TaskAssociation" />
			<entity schema="SmartFab.dbo" name="JobContract" />
			<entity schema="SmartFab.dbo" name="TaskAssignment" />
		</group>
		<group name="WAsP Views" color="C4E0F9" >
<<<<<<< HEAD
			<entity schema="SmartFab.dbo" name="MachineView" />
=======
			<entity schema="SmartFab.dbo" name="ContractTaskView" />
			<entity schema="SmartFab.dbo" name="MachineView" />
			<entity schema="SmartFab.dbo" name="ActiveView" />
>>>>>>> master
			<entity schema="SmartFab.dbo" name="RealTimeView" />
			<entity schema="SmartFab.dbo" name="AlertView" />
			<entity schema="SmartFab.dbo" name="WPSView" />
			<entity schema="SmartFab.dbo" name="SpecificationView" />
			<entity schema="SmartFab.dbo" name="TaskView" />
<<<<<<< HEAD
			<entity schema="SmartFab.dbo" name="ActiveView" />
			<entity schema="SmartFab.dbo" name="ContractTaskView" />
=======
>>>>>>> master
		</group>
		<group name="Django Admin" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="django_admin_log" />
			<entity schema="SmartFab.dbo" name="django_content_type" />
			<entity schema="SmartFab.dbo" name="django_migrations" />
			<entity schema="SmartFab.dbo" name="django_session" />
		</group>
		<group name="Authorisation" color="C4E0F9" >
			<entity schema="SmartFab.dbo" name="auth_user" />
			<entity schema="SmartFab.dbo" name="auth_permission" />
			<entity schema="SmartFab.dbo" name="auth_group_permissions" />
			<entity schema="SmartFab.dbo" name="auth_group" />
			<entity schema="SmartFab.dbo" name="auth_user_user_permissions" />
			<entity schema="SmartFab.dbo" name="auth_user_groups" />
		</group>
		<script name="SQL_Editor" id="Editor-a1c" language="SQL" >
			<string><![CDATA[CREATE TABLE SmartFab.dbo.Assignment ( 
	id                   int    IDENTITY  NOT NULL,
	JobID                int      NOT NULL,
	MachineID            int      NOT NULL,
	WelderID             int      NOT NULL,
	CONSTRAINT pk_Assignment PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.RealTime_Data ( 
	id                   int    IDENTITY  NOT NULL,
	Time                 datetime      NOT NULL,
	Temperature          float      NULL,
	[Current]            float      NULL,
	Voltage              float      NULL,
	Length               float  DEFAULT 0.00    NULL,
	WireFeedRate         float      NULL,
	GasUsed              float      NULL,
	HeatInput            float      NULL,
	TravelSpeed          float      NULL,
	TimeDelta            float      NULL,
	Power                float      NULL,
	CONSTRAINT pk_RealTime_Data PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.WeldTable ( 
	id                   int    IDENTITY  NOT NULL,
	RunNo                int      NOT NULL,
	Assignment_id        int      NOT NULL,
	CONSTRAINT pk_WeldTable PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.WeldingTable ( 
	id                   int    IDENTITY  NOT NULL,
	Machine_id           int      NOT NULL,
	RT_id                int      NOT NULL,
	WT_id                int      NOT NULL,
	Welder_id            int      NOT NULL,
	CONSTRAINT unq_WeldingTable_RT_id UNIQUE ( RT_id ) ,
	CONSTRAINT pk_WeldingTable PRIMARY KEY  ( id ) 
 );
GO

ALTER TABLE SmartFab.dbo.WeldTable ADD CONSTRAINT fk_WeldTable FOREIGN KEY ( Assignment_id ) REFERENCES SmartFab.dbo.Assignment( id );
GO

ALTER TABLE SmartFab.dbo.WeldingTable ADD CONSTRAINT fk_WeldingTable_RealTime_Data FOREIGN KEY ( RT_id ) REFERENCES SmartFab.dbo.RealTime_Data( id );
GO

ALTER TABLE SmartFab.dbo.WeldingTable ADD CONSTRAINT fk_WeldingTable_WeldTable FOREIGN KEY ( WT_id ) REFERENCES SmartFab.dbo.WeldTable( id );
GO]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor-95f" language="SQL" >
			<string><![CDATA[CREATE TABLE SmartFab.dbo.AlertTypes ( 
	id                   int    IDENTITY  NOT NULL,
	Description          varchar(40)      NOT NULL,
	CONSTRAINT pk_AlertTable PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Assignment ( 
	id                   int    IDENTITY  NOT NULL,
	TaskID               int      NOT NULL,
	MachineID            int      NOT NULL,
	WelderID             int      NOT NULL,
	CONSTRAINT pk_Assignment PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Category ( 
	category_id          int      NOT NULL,
	arctime              int      NOT NULL,
	CONSTRAINT pk_dashboard_category PRIMARY KEY  ( category_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Employees ( 
	payroll_id           int      NOT NULL,
	first_name           varchar(25)      NOT NULL,
	last_name            varchar(25)      NOT NULL,
	employment_status    bit      NOT NULL,
	CONSTRAINT pk_dashboard_user_list PRIMARY KEY  ( payroll_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.JobTimeTracker ( 
	id                   int      NOT NULL,
	category             int      NOT NULL,
	start_date           date      NOT NULL,
	end_date             date      NULL,
	accum_hrs            real      NOT NULL,
	total_hrs            real      NOT NULL,
	CONSTRAINT pk_dashboard_job PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Locations ( 
	id                   int      NOT NULL,
	Location             varchar(25)      NOT NULL,
	CONSTRAINT pk_dashboard_location PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Machines ( 
	id                   int      NOT NULL,
	Description          varchar(25)      NOT NULL,
	locid                int      NOT NULL,
	CONSTRAINT pk_dashboard_machine PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.RealTime_Data ( 
	id                   int    IDENTITY  NOT NULL,
	Time                 datetime      NOT NULL,
	Temperature          float      NULL,
	[Current]            float      NULL,
	Voltage              float      NULL,
	Length               float  DEFAULT 0.00    NULL,
	WireFeedRate         float      NULL,
	GasUsed              float      NULL,
	HeatInput            float      NULL,
	TravelSpeed          float      NULL,
	TimeDelta            float      NULL,
	Power                float      NULL,
	CONSTRAINT pk_RealTime_Data PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.RunTable ( 
	id                   int    IDENTITY  NOT NULL,
	RunNo                int      NOT NULL,
	Assignment_id        int      NOT NULL,
	CONSTRAINT pk_WeldTable PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.SpecTypes ( 
	id                   int    IDENTITY  NOT NULL,
	Description          varchar(40)      NOT NULL,
	CONSTRAINT pk_SpecType PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Specification ( 
	id                   int    IDENTITY  NOT NULL,
	Side                 varchar(10)      NULL,
	Position             varchar(20)      NULL,
	Class                varchar(20)      NULL,
	Size                 float      NULL,
	Gas_Flux_Type        varchar(20)      NULL,
	Current_Max          float      NULL,
	Current_Min          float      NULL,
	Voltage_Min          float      NULL,
	Voltage_Max          float      NULL,
	Polarity             varchar(10)      NULL,
	Travel_Speed_Min     float      NULL,
	Travel_Speed_Max     float      NULL,
	Interpass_Temp_Min   float      NULL,
	Interpass_Temp_Max   float      NULL,
	Heat_Input_Min       float      NULL,
	Heat_Input_Max       float      NULL,
	CONSTRAINT pk_Specification PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.TimesheetTaskType ( 
	id                   int      NOT NULL,
	Description          varchar(25)      NOT NULL,
	CONSTRAINT pk_dashboard_task_type PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.Timesheet_entry ( 
	tid                  int      NOT NULL,
	org_timesheet_id     nvarchar(128)      NOT NULL,
	payroll_id           int      NOT NULL,
	date                 date      NOT NULL,
	shift_end            time(7)      NOT NULL,
	shift_start          time(7)      NOT NULL,
	shift_length         real      NOT NULL,
	CONSTRAINT pk_dashboard_timesheet_entry PRIMARY KEY  ( tid ) 
 );
GO

CREATE TABLE SmartFab.dbo.WASP_Settings ( 
	setting_id           int      NOT NULL,
	name                 varchar(128)      NOT NULL,
	[desc]               varchar(128)      NOT NULL,
	value                varchar(128)      NOT NULL,
	CONSTRAINT pk_dashboard_db_settings PRIMARY KEY  ( setting_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.WPS ( 
	id                   int    IDENTITY  NOT NULL,
	WPS_No               int      NOT NULL,
	Welding_Code         varchar(20)      NULL,
	Joint_type           varchar(20)      NULL,
	CONSTRAINT pk_WPS PRIMARY KEY  ( id ) ,
	UNIQUE  INDEX unq_WPS_WPS_No (WPS_No) 
 );
GO

CREATE TABLE SmartFab.dbo.WPS_Run ( 
	id                   int    IDENTITY  NOT NULL,
	Run_No               int      NULL,
	WPS_id               int      NOT NULL,
	Specification_id     int      NOT NULL,
	CONSTRAINT pk_WPS_Run PRIMARY KEY  ( id ) ,
	CONSTRAINT unq_WPS_Run_Specification_id UNIQUE ( Specification_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.WeldingTable ( 
	id                   int    IDENTITY  NOT NULL,
	Machine_id           int      NOT NULL,
	RT_id                int      NOT NULL,
	WT_id                int      NOT NULL,
	Welder_id            int      NOT NULL,
	CONSTRAINT pk_WeldingTable PRIMARY KEY  ( id ) ,
	CONSTRAINT unq_WeldingTable_RT_id UNIQUE ( RT_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.auth_group ( 
	id                   int      NOT NULL,
	name                 varchar(150)      NOT NULL,
	CONSTRAINT pk_auth_group PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.auth_user ( 
	id                   int      NOT NULL,
	password             varchar(128)      NOT NULL,
	last_login           datetime      NULL,
	is_superuser         bit      NOT NULL,
	username             varchar(150)      NOT NULL,
	last_name            varchar(150)      NOT NULL,
	email                varchar(254)      NOT NULL,
	is_staff             bit      NOT NULL,
	is_active            bit      NOT NULL,
	date_joined          datetime      NOT NULL,
	first_name           varchar(150)      NOT NULL,
	CONSTRAINT pk_auth_user PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.auth_user_groups ( 
	id                   int      NOT NULL,
	user_id              int      NOT NULL,
	group_id             int      NOT NULL,
	CONSTRAINT pk_auth_user_groups PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.django_content_type ( 
	id                   int      NOT NULL,
	app_label            varchar(100)      NOT NULL,
	model                varchar(100)      NOT NULL,
	CONSTRAINT pk_django_content_type PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.django_migrations ( 
	id                   int      NOT NULL,
	app                  varchar(255)      NOT NULL,
	name                 varchar(255)      NOT NULL,
	applied              datetime      NOT NULL,
	CONSTRAINT pk_django_migrations PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.django_session ( 
	session_key          varchar(40)      NOT NULL,
	session_data         text      NOT NULL,
	expire_date          datetime      NOT NULL,
	CONSTRAINT pk_django_session PRIMARY KEY  ( session_key ) 
 );
GO

CREATE TABLE SmartFab.dbo.sysdiagrams ( 
	diagram_id           int    IDENTITY  NOT NULL,
	name                 sysname      NOT NULL,
	principal_id         int      NOT NULL,
	version              int      NULL,
	definition           varbinary(max)      NULL,
	CONSTRAINT PK__sysdiagr__C2B05B6112D23299 PRIMARY KEY  ( diagram_id ) ,
	CONSTRAINT UK_principal_name UNIQUE ( principal_id, name ) 
 );
GO

CREATE TABLE SmartFab.dbo.AlertsTable ( 
	id                   int    IDENTITY  NOT NULL,
	JobId                int      NOT NULL,
	AlertType            int      NOT NULL,
	SpecType             int      NOT NULL,
	StartTime            datetime      NOT NULL,
	FinishTime           datetime      NULL,
	CONSTRAINT pk_AlertsTable PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.JobContract ( 
	id                   int      NOT NULL,
	ContractName         varchar(100)      NULL,
	Details              text      NULL,
	CONSTRAINT [pk_Job Contract] PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.TaskAssignment ( 
	id                   int      NOT NULL,
	WPSNo                int      NOT NULL,
	Welderid             int      NOT NULL,
	Machineid            int      NOT NULL,
	CONSTRAINT pk_TaskAssignment PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.TaskAssociation ( 
	Jobid                int      NOT NULL,
	Taskid               int      NOT NULL,
	CONSTRAINT unq_TaskAssociation UNIQUE ( Taskid ) 
 );
GO

CREATE TABLE SmartFab.dbo.TimesheetTask ( 
	task_id              nvarchar(128)      NOT NULL,
	payroll_id           int      NOT NULL,
	type_id              int      NOT NULL,
	job_id               int      NOT NULL,
	machine_id           int      NOT NULL,
	datetime             datetime      NOT NULL,
	CONSTRAINT pk_dashboard_task PRIMARY KEY  ( task_id ) 
 );
GO

CREATE TABLE SmartFab.dbo.auth_permission ( 
	id                   int      NOT NULL,
	content_type_id      int      NOT NULL,
	codename             varchar(100)      NOT NULL,
	name                 varchar(255)      NOT NULL,
	CONSTRAINT pk_auth_permission PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.auth_user_user_permissions ( 
	id                   int      NOT NULL,
	user_id              int      NOT NULL,
	permission_id        int      NOT NULL,
	CONSTRAINT pk_auth_user_user_permissions PRIMARY KEY  ( id ) 
 );
GO

CREATE TABLE SmartFab.dbo.django_admin_log ( 
	id                   int      NOT NULL,
	action_time          datetime      NOT NULL,
	object_id            text      NULL,
	object_repr          varchar(200)      NOT NULL,
	change_message       text      NOT NULL,
	content_type_id      int      NULL,
	user_id              int      NOT NULL,
	action_flag          smallint      NOT NULL,
	[CHECK]              varchar(1)      NULL,
	CONSTRAINT pk_django_admin_log PRIMARY KEY  ( id ) ,
	CONSTRAINT Cns_django_admin_log_CHECK CHECK ( [action_flag]>=(0) )
 );
GO

CREATE TABLE SmartFab.dbo.auth_group_permissions ( 
	id                   int      NOT NULL,
	group_id             int      NOT NULL,
	permission_id        int      NOT NULL,
	CONSTRAINT pk_auth_group_permissions PRIMARY KEY  ( id ) 
 );
GO

CREATE  INDEX auth_user_groups_group_id_97559544 ON SmartFab.dbo.auth_user_groups ( group_id );
GO

CREATE  INDEX auth_user_groups_user_id_6a12ed8b ON SmartFab.dbo.auth_user_groups ( user_id );
GO

CREATE  INDEX django_session_expire_date_a5c62663 ON SmartFab.dbo.django_session ( expire_date );
GO

CREATE  INDEX auth_permission_content_type_id_2f476e4b ON SmartFab.dbo.auth_permission ( content_type_id );
GO

CREATE  INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON SmartFab.dbo.auth_user_user_permissions ( permission_id );
GO

CREATE  INDEX auth_user_user_permissions_user_id_a95ead1b ON SmartFab.dbo.auth_user_user_permissions ( user_id );
GO

CREATE  INDEX django_admin_log_content_type_id_c4bce8eb ON SmartFab.dbo.django_admin_log ( content_type_id );
GO

CREATE  INDEX django_admin_log_user_id_c564eba6 ON SmartFab.dbo.django_admin_log ( user_id );
GO

CREATE  INDEX auth_group_permissions_group_id_b120cbf9 ON SmartFab.dbo.auth_group_permissions ( group_id );
GO

CREATE  INDEX auth_group_permissions_permission_id_84c5c92e ON SmartFab.dbo.auth_group_permissions ( permission_id );
GO

ALTER TABLE SmartFab.dbo.AlertsTable ADD CONSTRAINT fk_AlertsTable_AlertTypes FOREIGN KEY ( AlertType ) REFERENCES SmartFab.dbo.AlertTypes( id );
GO

ALTER TABLE SmartFab.dbo.AlertsTable ADD CONSTRAINT fk_AlertsTable_SpecType FOREIGN KEY ( SpecType ) REFERENCES SmartFab.dbo.SpecTypes( id );
GO

ALTER TABLE SmartFab.dbo.JobContract ADD CONSTRAINT fk_JobContract_JobTimeTracker FOREIGN KEY ( id ) REFERENCES SmartFab.dbo.JobTimeTracker( id );
GO

ALTER TABLE SmartFab.dbo.JobTimeTracker ADD CONSTRAINT fk_dashboard_job_dashboard_category FOREIGN KEY ( category ) REFERENCES SmartFab.dbo.Category( category_id );
GO

ALTER TABLE SmartFab.dbo.Machines ADD CONSTRAINT fk_dashboard_machine_dashboard_location FOREIGN KEY ( locid ) REFERENCES SmartFab.dbo.Locations( id );
GO

ALTER TABLE SmartFab.dbo.RunTable ADD CONSTRAINT fk_WeldTable FOREIGN KEY ( Assignment_id ) REFERENCES SmartFab.dbo.Assignment( id );
GO

ALTER TABLE SmartFab.dbo.TaskAssignment ADD CONSTRAINT fk_TaskAssignment_WPS FOREIGN KEY ( WPSNo ) REFERENCES SmartFab.dbo.WPS( WPS_No );
GO

ALTER TABLE SmartFab.dbo.TaskAssignment ADD CONSTRAINT fk_TaskAssignment_Machines FOREIGN KEY ( Machineid ) REFERENCES SmartFab.dbo.Machines( id );
GO

ALTER TABLE SmartFab.dbo.TaskAssignment ADD CONSTRAINT fk_TaskAssignment_Employees FOREIGN KEY ( Welderid ) REFERENCES SmartFab.dbo.Employees( payroll_id );
GO

ALTER TABLE SmartFab.dbo.TaskAssociation ADD CONSTRAINT fk_TaskAssociation_TaskAssignment FOREIGN KEY ( Taskid ) REFERENCES SmartFab.dbo.TaskAssignment( id );
GO

ALTER TABLE SmartFab.dbo.TaskAssociation ADD CONSTRAINT [fk_TaskAssociation_Job Contract] FOREIGN KEY ( Jobid ) REFERENCES SmartFab.dbo.JobContract( id );
GO

ALTER TABLE SmartFab.dbo.TimesheetTask ADD CONSTRAINT fk_dashboard_task_dashboard_job FOREIGN KEY ( job_id ) REFERENCES SmartFab.dbo.JobTimeTracker( id );
GO

ALTER TABLE SmartFab.dbo.TimesheetTask ADD CONSTRAINT fk_dashboard_task_dashboard_machine FOREIGN KEY ( machine_id ) REFERENCES SmartFab.dbo.Machines( id );
GO

ALTER TABLE SmartFab.dbo.TimesheetTask ADD CONSTRAINT fk_dashboard_task_dashboard_task_type FOREIGN KEY ( type_id ) REFERENCES SmartFab.dbo.TimesheetTaskType( id );
GO

ALTER TABLE SmartFab.dbo.TimesheetTask ADD CONSTRAINT fk_TimesheetTask_Employees FOREIGN KEY ( payroll_id ) REFERENCES SmartFab.dbo.Employees( payroll_id );
GO

ALTER TABLE SmartFab.dbo.Timesheet_entry ADD CONSTRAINT fk_dashboard_timesheet_entry_dashboard_user_list FOREIGN KEY ( payroll_id ) REFERENCES SmartFab.dbo.Employees( payroll_id );
GO

ALTER TABLE SmartFab.dbo.WPS_Run ADD CONSTRAINT fk_WPS_Run_Specification FOREIGN KEY ( Specification_id ) REFERENCES SmartFab.dbo.Specification( id );
GO

ALTER TABLE SmartFab.dbo.WPS_Run ADD CONSTRAINT fk_WPS_Run_WPS FOREIGN KEY ( WPS_id ) REFERENCES SmartFab.dbo.WPS( id );
GO

ALTER TABLE SmartFab.dbo.WeldingTable ADD CONSTRAINT fk_WeldingTable_RealTime_Data FOREIGN KEY ( RT_id ) REFERENCES SmartFab.dbo.RealTime_Data( id );
GO

ALTER TABLE SmartFab.dbo.WeldingTable ADD CONSTRAINT fk_WeldingTable_WeldTable FOREIGN KEY ( WT_id ) REFERENCES SmartFab.dbo.RunTable( id );
GO

ALTER TABLE SmartFab.dbo.auth_group_permissions ADD CONSTRAINT [FK_auth_group_permissions auth_group] FOREIGN KEY ( group_id ) REFERENCES SmartFab.dbo.auth_group( id );
GO

ALTER TABLE SmartFab.dbo.auth_group_permissions ADD CONSTRAINT [FK_auth_group_permissions auth_permission] FOREIGN KEY ( permission_id ) REFERENCES SmartFab.dbo.auth_permission( id );
GO

ALTER TABLE SmartFab.dbo.auth_permission ADD CONSTRAINT [FK_auth_permission django_content_type] FOREIGN KEY ( content_type_id ) REFERENCES SmartFab.dbo.django_content_type( id );
GO

ALTER TABLE SmartFab.dbo.auth_user_groups ADD CONSTRAINT [FK_auth_user_groups auth_group] FOREIGN KEY ( group_id ) REFERENCES SmartFab.dbo.auth_group( id );
GO

ALTER TABLE SmartFab.dbo.auth_user_groups ADD CONSTRAINT [FK_auth_user_groups auth_user] FOREIGN KEY ( user_id ) REFERENCES SmartFab.dbo.auth_user( id );
GO

ALTER TABLE SmartFab.dbo.auth_user_user_permissions ADD CONSTRAINT [FK_auth_user_user_permissions auth_permission] FOREIGN KEY ( permission_id ) REFERENCES SmartFab.dbo.auth_permission( id );
GO

ALTER TABLE SmartFab.dbo.auth_user_user_permissions ADD CONSTRAINT [FK_auth_user_user_permissions auth_user] FOREIGN KEY ( user_id ) REFERENCES SmartFab.dbo.auth_user( id );
GO

ALTER TABLE SmartFab.dbo.django_admin_log ADD CONSTRAINT [FK_django_admin_log auth_user] FOREIGN KEY ( user_id ) REFERENCES SmartFab.dbo.auth_user( id );
GO

ALTER TABLE SmartFab.dbo.django_admin_log ADD CONSTRAINT [FK_django_admin_log django_content_type] FOREIGN KEY ( content_type_id ) REFERENCES SmartFab.dbo.django_content_type( id );
GO
]]></string>
		</script>
		<script name="SpecificationView" id="Editor-111" language="SQL" >
			<string><![CDATA[SELECT DISTINCT id, Welderid, Machineid, WPS_No, Welding_Code, Joint_type, Run_No, Side, Position, Class, Size, Gas_Flux_Type, Current_Max, 
	Current_Min, Voltage_Min, Voltage_Max, Polarity, TravelSpeed_Min, TravelSpeed_Max, InterpassTemp_Min, InterpassTemp_Max, 
	HeatInput_Min, HeatInput_Max
FROM SmartFab.dbo.SpecificationView w;

GO]]></string>
		</script>
		<query id="Query-1a45" name="RunTable" >
			<query_table schema="SmartFab.dbo" name="RunTable" alias="r" x="192" y="48" >
				<column name="RunNo" />
				<query_table schema="SmartFab.dbo" name="Assignment" alias="a" x="48" y="48" fk="fk_WeldTable" type="Inner Join" >
					<column name="TaskID" />
					<column name="MachineID" />
					<column name="WelderID" />
				</query_table>
				<query_table schema="SmartFab.dbo" name="WeldingTable" alias="w" x="496" y="48" fk="fk_WeldingTable_WeldTable" type="Inner Join" >
					<query_table schema="SmartFab.dbo" name="RealTime_Data" alias="rd" x="672" y="80" fk="fk_WeldingTable_RealTime_Data" type="Inner Join" >
						<column name="Time" />
						<column name="Temperature" />
						<column name="Current" />
						<column name="Voltage" />
						<column name="Length" />
						<column name="WireFeedRate" />
						<column name="GasUsed" />
						<column name="HeatInput" />
						<column name="TravelSpeed" />
						<column name="TimeDelta" />
						<column name="Power" />
					</query_table>
				</query_table>
			</query_table>
		</query>
		<form name="Report" id="Report-e01" template="Page" css="container-fluid" view="frame" >
			<body name="Body" template="Grid" pos="0,0,0,0,f,f" layout="{{-2},{-2}}" scroll="n" html="n" />
		</form>
	</layout>
</project>